import { Data, Override } from "framer"

const carouselData = Data({ slideIndex: 0})
let onlyFirstTime = false

let isClicked = false
let speed = 200
let slideCount = 0
let sliderDots = []
let timer

export const onSlideChange: Override = (props) => {
    if (props.slideIndex !== undefined && !onlyFirstTime)
    {
        carouselData.slideIndex = props.slideIndex
        speed = props.speed
        slideCount =  props.children[0].props.children.length
        onlyFirstTime = true
    }
    return {
        onSlideIndexBeforeChange(current, next) {
            carouselData.slideIndex = next
            sliderDots.forEach((el,i) => {
                if (i==next)
                    el.style.opacity = 1
                else
                    el.style.opacity = 0.5
            })
        },
        slideIndex: carouselData.slideIndex
    }
}

export const goToNextSlide: Override = (props) => {
    let el = document.getElementById(props.id)
    if (el != null)
        el.style.transform = el.style.transform.replace(/translate\((.*)\) sc/,'translate3d($1, 0px) sc')
        
    return {
        onTap() {
            if (!isClicked)
            {
                isClicked = true
                let index = Math.min(Math.max(carouselData.slideIndex+1, 0), slideCount);
                if (index < slideCount)
                    carouselData.slideIndex = index
                setTimeout(() => {isClicked = false;},speed)
            }
        }
    }
}
export const goToPreviousSlide: Override = (props) => {
    let el = document.getElementById(props.id)
    if (el != null)
        el.style.transform = el.style.transform.replace(/translate\((.*)\) sc/,'translate3d($1, 0px) sc')
        
    return {
        onTap() {
            if (!isClicked)
            {
                isClicked = true
                let index = Math.min(Math.max(carouselData.slideIndex-1, 0), slideCount);
                if (index < slideCount)
                    carouselData.slideIndex = index
                setTimeout(() => {isClicked = false;},speed)
            }
        }
    }
}

export const sliderDotTap: Override = (props) => {
    let el = document.getElementById(props.id)
    if (el != null)
        sliderDots = Array.from(document.getElementById(props.id).parentNode.children)
    return {
        onTap(event) {
            if (!isClicked)
            {
                let dot = event.target.closest("#"+this.id)
                let dots = Array.from(dot.parentNode.children)
                dots.forEach((el) => el.style.opacity = 0.5)
                dot.style.opacity = 1
                carouselData.slideIndex = dots.indexOf(dot);
                setTimeout(() => {isClicked = false;},speed)
            }
        }
    }
}