import { Data, animate, Override, Animatable } from "framer"

const data = Data({ 
    width: Animatable(280), 
    height: Animatable(340), 
    top: Animatable(0), 
    left: Animatable(0), 
    radius: Animatable(4), 
    opacity: Animatable(0),
    width1: Animatable(280), 
    height1: Animatable(340), 
    top1: Animatable(0), 
    left1: Animatable(0), 
    radius1: Animatable(4), 
    opacity1: Animatable(0),
    width2: Animatable(280), 
    height2: Animatable(340), 
    top2: Animatable(0), 
    left2: Animatable(0), 
    radius2: Animatable(4), 
    opacity2: Animatable(0)  
})

let isACard = true

const scale = async (toggle,index, el) => {
    el.closest('.slider-list').appendChild(el)
    animate.easeIn(data["width"+index], toggle ? 375 : 280, {duration: 0.35})
    animate.easeIn(data["height"+index], toggle ? 812 : 340, {duration: 0.35})
    animate.easeIn(data["top"+index], toggle ? -450 : 0, {duration: 0.35})
    animate.easeIn(data["left"+index], toggle ? (data["left"+index].get()-16) : (data["left"+index].get()+16), {duration: 0.35}) 
    animate.easeIn(data["opacity"+index], toggle ? 1 : 0, {duration: 0.35}).finished
    await animate.easeIn(data["radius"+index], toggle ? 0 : 4, {duration: 0.35}).finished

    isACard = !isACard 
}

export const ScaleUp: Override = (props) => {
    data.top.set(props.top)
    data.left.set(props.left)
    return {
        width: data.width,
        height: data.height,
        top: data.top,
        left: data.left,
        radius: data.radius,
        onTap(a) {
            let el = document.getElementById(props.id)
            if (isACard)
                scale(true, "", el)
        },
    }
}
export const ScaleUp1: Override = (props) => {
    data.top1.set(props.top)
    data.left1.set(props.left)
    return {
        width: data.width1,
        height: data.height1,
        top: data.top1,
        left: data.left1,
        radius: data.radius1,
        onTap(a) {
            let el = document.getElementById(props.id)
            if (isACard)
                scale(true,"1",el)
        },
    }
}
export const ScaleUp2: Override = (props) => {
    data.top2.set(props.top)
    data.left2.set(props.left)
    return {
        width: data.width2,
        height: data.height2,
        top: data.top2,
        left: data.left2,
        radius: data.radius2,
        onTap(a) {
            let el = document.getElementById(props.id)
            if (isACard)
                scale(true,"2",el)
        },
    }
}
export const ScaleDown: Override = (props) => {
    return {
        opacity: data.opacity,
        onTap(a) {
            let el = document.getElementById(props.id).parentNode.parentNode
            if (!isACard)
                scale(false,"",el);
        },
    }
}
export const ScaleDown1: Override = (props) => {
    return {
        opacit1: data.opacity,
        onTap(a) {
            let el = document.getElementById(props.id).parentNode.parentNode
            if (!isACard)
                scale(false,"1",el);
        },
    }
}

export const ScaleDown2: Override = (props) => {
    return {
        opacity2: data.opacity,
        onTap(a) {
            let el = document.getElementById(props.id).parentNode.parentNode
            if (!isACard)
                scale(false,"2",el);
        },
    }
}

