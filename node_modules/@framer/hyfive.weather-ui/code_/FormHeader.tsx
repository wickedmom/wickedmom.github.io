import * as React from "react";
import { PropertyControls, ControlType } from "framer";

const style: React.CSSProperties = {
    height: "100%",
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    textAlign: "center",
    color: "#8855FF",
    overflow: "hidden",
    background: "white",
};

// Define type of property
interface Props {
    text: string;
    required: Boolean;
    withIcon: Boolean;
}

export class FormHeader extends React.Component<Props> {

    // Set default properties
    static defaultProps = {
    text: "Header",
    required: false,
    withIcon: false,
    width: 375,
    height: 64,
    }

    // Items shown in property panel
    static propertyControls: PropertyControls = {
    text: { type: ControlType.String, title: "Header" },
    required: {
        type: ControlType.Boolean, 
        title: "Required"},
    withIcon: { type: ControlType.Boolean, title: "Icon (22pt)" },
    }

    render() {

    var iconStyle, required;
    
    if (this.props.withIcon == false){
        iconStyle = iconStyles.iconFalse;
    } else {
        iconStyle = iconStyles.iconTrue;
    }

    if (this.props.required == false){
        required = styles.notRequired;
    } else {
        required = styles.required;
    }

    return <div style={styles.formHeader}>
    <div style={iconStyle}>{this.props.children}</div>
    <div style={styles.headerText}>{this.props.text}</div>
    <div style={required}>*</div>
    </div>;
    }
}

const styles = {
    formHeader:{
        display: "inline-flex",
        width: "100%",
        height: "100%",
        paddingTop: 36,
        fontSize: 16,
        lineHeight: 1.5,   
        background: "white",     
        // background: "rgba(136, 85, 255, 0.1)",
    },
    headerText:{
        paddingLeft: 20,
    },
    required:{
        paddingLeft: 4,
        color: "#FF4948",
    },

    notRequired:{
        display: "none",
    }
}

const iconStyles = {
    iconTrue:{
        display: "inline-flex",
        width: 22,
        height: 22,
        paddingLeft: 20,
        marginRight: 20,

    },
    iconFalse:{
        display: "inline-flex",
    }
}